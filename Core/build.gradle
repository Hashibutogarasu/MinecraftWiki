import org.gradle.api.JavaVersion
import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation 'org.jsoup:jsoup:1.16.2'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.9'

    // https://mvnrepository.com/artifact/io.github.netmikey.logunit/logunit-core
    implementation group: 'io.github.netmikey.logunit', name: 'logunit-core', version: '2.0.0'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.1'

    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20231013'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
}

def targetJavaVersion = 17

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    project.version = project.version

    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
    withJavadocJar()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'git.hashibutogarasu.minecraftwiki.MinecraftWiki'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}